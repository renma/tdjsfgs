#!/bin/bash
# Time-stamp: <2020-11-09 08:02:51 rene>
#
# Copyright (C) 2017 Rene Maurer
# This file is part of tangodjsforgoodsound.
#
# tangodjsforgoodsound is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# tangodjsforgoodsound is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# ----------------------------------------------------------------------

help() {
    echo
    echo "restart server or rsync sources and restart server"
    echo
    echo "Parameter 1: start   -> start server"
    echo "             kill    -> kill server"
    echo "             restart -> restart server"
    echo "             getdb   -> get database from remote"
    echo "             dist    -> rsync sources (if local without database)"
    echo "             distall -> rsync sources (if local with database)"
    echo "             newcss  -> create new css"
    echo "             clearsessions -> clear expired sessions"
    echo "             doc     -> copy doc to static"
    echo
    echo "Parameter 2: test       -> test-server or local"
    echo "             testsilent -> test-server silent or local silent" 
    echo "             prod       -> productive-server"
    echo "             prodsilent -> productive-server silent"
    echo
    exit 1
}


if ([ ! "$1" = "start" ] && [ ! "$1" = "kill" ] && [ ! "$1" = "restart" ] && [ ! "$1" = "getdb" ] && \
       [ ! "$1" = "dist" ] && [ ! "$1" = "distall" ] && [ ! "$1" = "newcss" ] && [ ! "$1" = "doc" ] && \
       [ ! "$1" = "clearsessions" ]) || \
       ([ ! "$2" = "test" ] && [ ! "$2" = "prod" ] && [ ! "$2" = "testsilent" ] && [ ! "$2" = "prodsilent" ]); then
    help
fi


RELEASE=153


localdir=~/Data/tangodjsforgoodsound.info/tdjsfgs 
if [ "$2" = "prod"  ] || [ "$2" = "prodsilent" ]; then
    remotedir=/home/tdjsfgs/ALL/mysite
    UBERSPACE=uberspace3
else
    remotedir=/home/rem/ALL/mysite
    UBERSPACE=uberspace1
fi


if [ "$2" = "testsilent"  ] || [ "$2" = "prodsilent" ]; then
    SILENT=silent
else
    SILENT=
fi


if [ -d $remotedir ]; then
    PYTHON=/usr/bin/python2.7
    WORKDIR=$remotedir
    PORT=63762
else
    PYTHON=python2.7
    WORKDIR=$localdir
    PORT=8000
fi


info() {
    if [ ! "$SILENT" ]; then
        date "+%Y-%m-%d %H:%M:%S $1"
    fi
    if [ -d $remotedir ]; then
	date "+%Y-%m-%d %H:%M:%S $1" >> $remotedir/INFO.log
    fi
}


startserver() {
    cd $WORKDIR
    if [ ! -d $remotedir ]; then
	info "Server start"
        cp settings.py.topsecret mysite/settings.py
        $PYTHON manage.py runserver 0.0.0.0:$PORT
	exit 0
    fi
    SERVER_STARTED=$(netstat -tulpen | grep $PORT)
    if [ -d /home/rem ]; then
	REMOTE=tdjsfgs@centaurus.uberspace.de:.qmail-cumparsita
	FILE=/home/rem/ALL/mysite/qmail-cumparsita
	rm -f $FILE
	scp -i /home/rem/.ssh/id_rsa_3072_uberspace3 $REMOTE $FILE > /dev/null 2>&1
	if [ ! -f $FILE ]; then
	    info "$FILE not found - kill server"
	    if [ "$SERVER_STARTED" ]; then
		killserver
	    else
		info "Server already killed"
	    fi
	    exit 0
	fi
    fi
    if [ ! "$SERVER_STARTED" ]; then
	info "Server start"
	cp settings.py.topsecret mysite/settings.py
	$PYTHON manage.py runserver 0.0.0.0:$PORT --noreload &
    else
	info "Server already started"
    fi
}


killserver() {
    pkill -f runserver
    info "Server killed"
    sleep 2
}


if [ "$1" = "kill" ]; then
    killserver
    exit 0
fi


if [ "$1" = "start" ]; then
    startserver
    exit 0
fi


if [ "$1" = "restart" ]; then
    killserver
    startserver
    exit 0
fi


if [ "$1" = "clearsessions" ]; then
    cd $WORKDIR
    $PYTHON manage.py clearsessions
    exit 0
fi


if [ "$1" = "doc" ]; then
    cd RESOURCES
    DST=tangodjsforgoodsound/static
    for f in Kontakte_zu_Usern_o_Publik_2019-01-12.pdf \
                 Kontakte_und_Reaktiokion_nach_Release_1.3.6.pdf \
                 releasenotes_$RELEASE.txt; do
        cp $f ../$DST/.
        echo "$f copied to $DST"
    done
    for f in tdjsfgs_testing_current tdjsfgs_testing_$RELEASE; do
        f1=$f.xls
        f2=../$DST/$f.pdf
        if [[ $f1 -nt $f2 ]]; then
            rm -f $f.pdf
            libreoffice --headless --convert-to pdf $f.xls > /dev/null 2>&1
            cp $f.* ../$DST/.
            rm -f $f.pdf
            echo "../$DST/$f.pdf created"
        else
            echo "$f1 nothing to do"
        fi
    done
    echo "$DST READY"
    exit 0
fi


if [ "$1" = "getdb" ]; then

    if [ -d $localdir ]; then
	DBF=db.sqlite3
	now=$(date +"%y%m%d%H%M%S")
	cp $localdir/$DBF $localdir/$DBF.$now
	scp $UBERSPACE:$remotedir/$DBF $localdir/$DBF
	echo "backup created: $localdir/$DBF.$now"
	echo "$localdir/$DBF ready"
    fi
    exit 0
fi


if [ "$1" = "dist" ] || [ "$1" = "distall" ] ; then

    if [ -d $localdir ]; then
	echo "rsync $localdir/* => $UBERSPACE:$remotedir"
        if [ "$1" = "distall" ] ; then
            rsync -avz --delete --exclude *~ --exclude *pyc --exclude .git --exclude *info.log* \
	          --exclude *db.sqlite3.1* --exclude *style.css --exclude tdjsfgs.log \
                  --exclude RESOURCES --exclude tmp* --exclude olddbs* \
                  $localdir/* $UBERSPACE:$remotedir
        else
            rsync -avz --delete --exclude *~ --exclude *pyc --exclude .git --exclude *info.log* \
	          --exclude *db.sqlite3.1* --exclude *db.sqlite3* --exclude *style.css --exclude tdjsfgs.log \
                  --exclude RESOURCES --exclude tmp* --exclude olddbs* \
                  $localdir/* $UBERSPACE:$remotedir
        fi
        echo
        date +"%Y-%m-%d %H:%M:%S"
        echo "login to $UBERSPACE and start the server"
        ssh $UBERSPACE
	echo
    fi
    exit 0
fi


if [ "$1" = "newcss" ]; then

    if [ -d $localdir ]; then
        STYLE_DIR=$WORKDIR/tangodjsforgoodsound/static
        rm -f $STYLE_DIR/style_20*.css
        now=$(date +"%Y%m%d%H%M%S")
	newcss=$STYLE_DIR/style_$now.css
	cp $STYLE_DIR/style.css $newcss
        echo "$newcss created"
	F=$WORKDIR/tangodjsforgoodsound/templates/base.html
	sed -i "/.*stylesheet.*/c\  <link rel=\"stylesheet\" href=\"{% static 'style_$now.css\' %}\" type=\"text/css\">" $F
        echo "$F adjusted"
    fi
    exit 0
fi

help
