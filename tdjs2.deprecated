#!/bin/bash
# Time-stamp: <2020-11-02 13:52:11 rene>
#
# Copyright (C) 2017 Rene Maurer
# This file is part of tangodjsforgoodsound.
#
# tangodjsforgoodsound is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# tangodjsforgoodsound is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# ----------------------------------------------------------------------

UBERSPACE=uberspace3
# localdir=~/mysite
localdir=~/Data/tangodjsforgoodsound.info/tdjsfgs
remotedir=/home/tdjsfgs/ALL/mysite
if [ -d $remotedir ]; then
    PYTHON=/usr/local/bin/python2.7
    WORKDIR=$remotedir
    PORT=63763
    LOGFILE_RESTART=$remotedir/restart.log
else
    PYTHON=python2.7
    WORKDIR=$localdir
    PORT=8000
fi


help() {
    echo
    echo "restart server or rsync sources and restart server"
    echo
    echo "Parameter 1: start   -> start server"
    echo "             kill    -> kill server"
    echo "             restart -> restart server"
    echo "             getdb   -> get database from remote"
    echo "             dist    -> rsync sources (if local without database)"
    echo "             distall -> rsync sources (if local with database)"
    echo "             newcss  -> creatre new css"
    echo "             clearsessions -> clear expired sessions"
    echo "             doc     -> create doc in static"
    echo
    echo "Parameter 2: silent"
    echo
    exit 1
}


SILENT="$2"


info() {
    if [ ! "$SILENT" ]; then
        date "+%Y-%m-%d %H:%M:%S $1"
    fi
    if [ -d $remotedir ]; then
	date "+%Y-%m-%d %H:%M:%S $1" >> $remotedir/INFO.log
    fi
}


startserver() {
    cd $WORKDIR
    if [ -d $remotedir ]; then
	X=$(netstat -tulpen | grep $PORT)
	if [ "$X" ]; then
            info "Server already started"
	    exit 0
	fi
        cp settings.py.topsecret mysite/settings.py
        $PYTHON manage.py runserver $PORT --noreload &
    else
        cp settings.py.topsecret mysite/settings.py
        $PYTHON manage.py runserver $PORT
    fi
    info "Server started"
}


killserver() {
    pkill -f runserver
    info "Server killed"
    sleep 2
}


if [ "$1" = "kill" ]; then
    killserver
    exit 0
fi


if [ "$1" = "start" ]; then
    startserver
    exit 0
fi


if [ "$1" = "restart" ]; then
    killserver
    startserver
    exit 0
fi


if [ "$1" = "clearsessions" ]; then
    cd $WORKDIR
    $PYTHON manage.py clearsessions
    exit 0
fi


if [ "$1" = "doc" ]; then
    ./tdjs doc
    exit 0
fi


if [ "$1" = "getdb" ]; then

    if [ -d $localdir ]; then
	DBF=db.sqlite3
	now=$(date +"%y%m%d%H%M%S")
	cp $localdir/$DBF $localdir/$DBF.$now
	scp $UBERSPACE:$remotedir/$DBF $localdir/$DBF
        echo "backup created: $localdir/$DBF.$now"
	echo "$localdir/$DBF ready"
    fi
    exit 0
fi


if [ "$1" = "dist" ] || [ "$1" = "distall" ] ; then
    if [ -d $localdir ]; then
	ssh $UBERSPACE "$remotedir/tdjs kill"
	echo "ssh $UBERSPACE $remotedir/tdjs kill DONE"
	echo "rsync $localdir/* => $UBERSPACE:$remotedir"
        if [ "$1" = "distall" ] ; then
            rsync -avz --delete --exclude *~ --exclude *pyc --exclude .git --exclude *info.log* \
	          --exclude *db.sqlite3.1* --exclude *style.css --exclude tdjsfgs.log \
                  --exclude RESOURCES --exclude tmp* --exclude olddbs* \
                 $localdir/* $$UBERSPACE:$remotedir
        else
            rsync -avz --delete --exclude *~ --exclude *pyc --exclude .git --exclude *info.log* \
	          --exclude *db.sqlite3.1* --exclude *db.sqlite3* --exclude *style.css --exclude tdjsfgs.log \
                  --exclude RESOURCES --exclude tmp* --exclude olddbs* \
                  $localdir/* $UBERSPACE:$remotedir
        fi
        echo
        date +"%Y-%m-%d %H:%M:%S"
        echo "login to $UBERSPACE and start the server"
        ssh $UBERSPACE
	echo
    fi
    exit 0

fi


if [ "$1" = "newcss" ]; then

    if [ -d $localdir ]; then
        STYLE_DIR=$WORKDIR/tangodjsforgoodsound/static
        rm -f $STYLE_DIR/style_20*.css
        now=$(date +"%Y%m%d%H%M%S")
	newcss=$STYLE_DIR/style_$now.css
	cp $STYLE_DIR/style.css $newcss
        echo "$newcss created"
	F=$WORKDIR/tangodjsforgoodsound/templates/base.html
	sed -i "/.*stylesheet.*/c\  <link rel=\"stylesheet\" href=\"{% static 'style_$now.css\' %}\" type=\"text/css\">" $F
        echo "$F adjusted"
    fi
    exit 0
fi


help
exit 1
